$(document).ready(function(){var e=$(".slider").glide().data("api_glide");$(window).on("keyup",function(t){13===t.keyCode&&e.jump(3,console.log("Wooo!"))}),$(".slider-arrow").on("click",function(){console.log(e.current())}),myCarousel=function(){function e(){var e=document.querySelector(".left"),t=document.querySelector(".center"),n=document.querySelector(".right");e.innerHTML=i.itemCarousel[i.countLeft++],i.countLeft===i.itemCarousel.length&&(i.countLeft=0),i.countRight++,i.countRight===i.itemCarousel.length&&(i.countRight=0),t.className="left",n.className="center",e.className="right first"}function t(){var e=i.containerCarousel.querySelector(".left"),t=i.containerCarousel.querySelector(".center"),n=i.containerCarousel.querySelector(".right");n.innerHTML=i.itemCarousel[i.countRight--],i.countRight==-1&&(i.countRight=i.itemCarousel.length-1),i.countLeft--,i.countLeft===-1&&(i.countLeft=i.itemCarousel.length-1),t.className="right",e.className="center",n.className="left first"}function n(){if(i.listCarousel.length>2){3===i.listCarousel.length?(i.countLeft=0,i.countRight=2):(i.countLeft=3,i.countRight=i.listCarousel.length-1);for(var e=i.listCarousel.length-1;e>=0;e--)i.maxHeigth<i.listCarousel[e].offsetHeight&&(i.maxHeigth=i.listCarousel[e].offsetHeight),i.itemCarousel[e]=i.listCarousel[e].innerHTML,i.listCarousel[e].remove();for(var t=2;t>=0;t--)i.containerCarousel.appendChild(i.listCarousel[t]);i.listCarousel[0].className="left",i.listCarousel[1].className="center",i.listCarousel[2].className="right",i.containerCarousel.style.height=i.maxHeigth+"px",o()}}function o(){var n=document.createElement("div"),o=document.createElement("div");n.className="btn",n.onclick=e,o.onclick=t,o.className="btn",i.pagination.className="paginator",i.pagination.appendChild(n),i.pagination.appendChild(o),i.containerCarousel.parentNode.appendChild(i.pagination)}function a(){n(),setInterval(e,5e3)}var i={containerCarousel:document.querySelector(".carousel"),listCarousel:document.querySelectorAll(".carousel li"),itemCarousel:[],countLeft:0,countRight:0,maxHeigth:0,pagination:document.createElement("div")};a()},myCarousel();var t=function(){var e=new google.maps.LatLng(51.089709,71.447923),t=new google.maps.LatLng(51.089709,71.447923),n=document.getElementById("map_canvas"),o={center:t,zoom:13,scrollwheel:!1,draggable:!0,disableDefaultUI:!0,mapTypeId:google.maps.MapTypeId.ROADMAP},a=new google.maps.Map(n,o),i='<div id="content"><div id="siteNotice"></div><h1 id="firstHeading" class="firstHeading">thoughtbot</h1><div id="bodyContent"<p>Sveav√§gen 98</p></div></div>',l=new google.maps.InfoWindow({content:i,maxWidth:300}),r=new google.maps.Marker({position:e,map:a,title:"thoughtbot (Sweden)"});return{init:function(){a.set("styles",[{featureType:"landscape",elementType:"geometry",stylers:[{hue:"#ffff00"},{saturation:30},{lightness:10}]}]),google.maps.event.addListener(r,"click",function(){l.open(a,r)})}}}();t.init()});
!function(t,a,n,r){function e(r,e){var o=this;return o.options=t.extend({},i,e),o.parent=r,o.wrapper=o.parent.children(),o.slides=o.wrapper.children(),o.currentSlide=0,o.CSS3support=!0,o.options.beforeInit.call(o),o.init(),o.build(),o.play(),o.options.touchDistance&&o.swipe(),o.options.keyboard&&t(n).on("keyup",function(t){39===t.keyCode&&o.slide(1),37===t.keyCode&&o.slide(-1)}),o.options.hoverpause&&o.parent.add(o.arrows).add(o.nav).on("mouseover mouseout",function(t){o.pause(),"mouseout"===t.type&&o.play()}),t(a).on("resize",function(){o.init(),o.slide(0)}),o.options.afterInit.call(o),{current:function(){return-o.currentSlide+1},play:function(){o.play()},pause:function(){o.pause()},next:function(t){o.slide(1,!1,t)},prev:function(t){o.slide(-1,!1,t)},jump:function(t,a){o.slide(t-1,!0,a)},nav:function(t){o.navWrapper&&o.navWrapper.remove(),o.options.nav=t?t:o.options.nav,o.navigation()},arrows:function(t){o.arrowsWrapper&&o.arrowsWrapper.remove(),o.options.arrows=t?t:o.options.arrows,o.arrows()}}}function o(t){var e=!1,o="Khtml ms O Moz Webkit".split(" "),s=n.createElement("div"),i=null;if(t=t.toLowerCase(),s.style[t]!==r&&(e=!0),e===!1){i=t.charAt(0).toUpperCase()+t.substr(1);for(var p=0;p<o.length;p++)if(s.style[o[p]+i]!==r){e=!0;break}}return a.opera&&a.opera.version()<13&&(e=!1),e}var s="glide",i={autoplay:!1,hoverpause:!0,animationTime:500,arrows:!0,arrowsWrapperClass:"slider-arrows",arrowMainClass:"slider-arrow",arrowRightClass:"slider-arrow--right",arrowRightText:"",arrowLeftClass:"slider-arrow--left",arrowLeftText:"",nav:!0,navCenter:!0,navClass:"slider-nav",navItemClass:"slider-nav__item",navCurrentItemClass:"slider-nav__item--current",keyboard:!0,touchDistance:60,beforeInit:function(){},afterInit:function(){},beforeTransition:function(){},afterTransition:function(){}};e.prototype.build=function(){var t=this;t.options.arrows&&t.arrows(),t.options.nav&&t.navigation()},e.prototype.navigation=function(){var a=this;if(a.slides.length>1){var n=a.options,r=a.options.nav===!0?a.parent:a.options.nav;a.navWrapper=t("<div />",{"class":n.navClass}).appendTo(r);for(var e,o=a.navWrapper,s=0;s<a.slides.length;s++)e=t("<a />",{href:"#","class":n.navItemClass,"data-distance":s}).appendTo(o),o[s+1]=e;var i=o.children();i.eq(0).addClass(n.navCurrentItemClass),n.navCenter&&o.css({left:"50%",width:i.outerWidth(!0)*i.length,"margin-left":"-60px"}),i.on("click touchstart",function(n){n.preventDefault(),a.slide(t(this).data("distance"),!0)})}},e.prototype.arrows=function(){var a=this;if(a.slides.length>1){var n=a.options,r=a.options.arrows===!0?a.parent:a.options.arrows;a.arrowsWrapper=t("<div />",{"class":n.arrowsWrapperClass}).appendTo(r);var e=a.arrowsWrapper;e.right=t("<a />",{href:"#","class":n.arrowMainClass+" "+n.arrowRightClass,"data-distance":"1",html:n.arrowRightText}).appendTo(e),e.left=t("<a />",{href:"#","class":n.arrowMainClass+" "+n.arrowLeftClass,"data-distance":"-1",html:n.arrowLeftText}).appendTo(e),e.children().on("click touchstart",function(n){n.preventDefault(),a.slide(t(this).data("distance"),!1)})}},e.prototype.slide=function(t,a,n){var r=this;r.pause(),r.options.beforeTransition.call(r);var e=a?0:r.currentSlide,o=-(r.slides.length-1),s=r.options.navCurrentItemClass,i=r.slides.spread;0===e&&t===-1?e=o:e===o&&1===t?e=0:e+=-t;var p=i*e+"px";r.CSS3support?r.wrapper.css({"-webkit-transform":"translate3d("+p+", 0px, 0px)","-moz-transform":"translate3d("+p+", 0px, 0px)","-ms-transform":"translate3d("+p+", 0px, 0px)","-o-transform":"translate3d("+p+", 0px, 0px)",transform:"translate3d("+p+", 0px, 0px)"}):r.wrapper.stop().animate({"margin-left":p},r.options.animationTime),r.options.nav&&r.navWrapper&&r.navWrapper.children().eq(-e).addClass(s).siblings().removeClass(s),r.currentSlide=e,r.options.afterTransition.call(r),"undefined"!==n&&"function"==typeof n&&n(),r.play()},e.prototype.play=function(){var t=this;t.options.autoplay&&(t.auto=setInterval(function(){t.slide(1,!1)},t.options.autoplay))},e.prototype.pause=function(){var t=this;t.options.autoplay&&(t.auto=clearInterval(t.auto))},e.prototype.swipe=function(){var t,a,n,r,e,o,s,i,p,l,u,d,c,f=this,h=180/Math.PI;f.parent.on("touchstart",function(a){t=a.originalEvent.touches[0]||a.originalEvent.changedTouches[0],n=t.pageX,r=t.pageY}),f.parent.on("touchmove",function(a){t=a.originalEvent.touches[0]||a.originalEvent.changedTouches[0],e=t.pageX,o=t.pageY,l=e-n,u=o-r,d=Math.abs(l<<2),c=Math.abs(u<<2),s=Math.sqrt(d+c),i=Math.sqrt(c),p=Math.asin(i/s),p*h<32&&a.preventDefault()}),f.parent.on("touchend",function(r){t=r.originalEvent.touches[0]||r.originalEvent.changedTouches[0],a=t.pageX-n,a>f.options.touchDistance?f.slide(-1):a<-f.options.touchDistance&&f.slide(1)})},e.prototype.init=function(){var t=this,a=t.parent.width();t.slides.spread=a,t.wrapper.width(a*t.slides.length),t.slides.width(t.slides.spread),o("transition")&&o("transform")||(t.CSS3support=!1)},t.fn[s]=function(a){return this.each(function(){t.data(this,"api_"+s)||t.data(this,"api_"+s,new e(t(this),a))})}}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
